@use "../abstracts/variables" as var;
@use "../base/typography" as typ;
@use "sass:math";
@use "sass:map";

// _mixins.scss
@mixin flex($justify: flex-start, $align: flex-start, $direction: row, $column-gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  column-gap: $column-gap;
}

@mixin btn($height-btn,$width-btn,$primary-color-btn,$border-radius,$text-style: null) {
    --height:#{$height-btn};
    --width:#{$width-btn};
    --primary-color-btn:#{$primary-color-btn};

    @if $text-style != null {
    @extend %#{$text-style};
  }
    
    display: inline-block;
    min-width: var(--width);
    height: var(--height);
    padding: 0 20px;
    border: 1px solid var(--primary-color-btn);
    border-radius: $border-radius;
    line-height: var(--height);
    color: #FFF;
    background: var(--primary-color-btn);

  &:hover {
    opacity: 0.5;
  }
}

@mixin respond($breakpoint) {
  $value: map.get(var.$grid-breakpoints, $breakpoint);

  @if $value == null {
    $value: map.get(var.$grid-breakpoints, lg); // fallback náº¿u sai
  }

  @media screen and (max-width: $value) {
    @content;
  }
}

@mixin show($mode) {
  @if $mode == mobile {
    display: none;

    @include respond(lg) {
      display: none;
    }

    @include respond(md) {
      display: block;
    }
  }

  @else if $mode == desktop {
    @include respond(md) {
      display: none;
    }
  }
}
